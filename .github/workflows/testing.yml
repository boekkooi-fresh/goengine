name: Testing

on:
  push:
    branches: [ v0.3 ]
  pull_request:
    branches: [ v0.3 ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [ lint ]

    services:
      rabbit:
        image: rabbitmq:3.6-management-alpine
        ports:
          - "5672"
          - "15672"

      mongo:
        image: mongo:3
        ports:
          - "27017"

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run unit tests
        run: go test -cover -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Run integration tests
        if: success()
        run: go run ./cmd/goengine/...
        env:
          BROKER_DSN: amqp://guest:guest@localhost:${{ job.services.rabbit.ports[5672] }}/
          STORAGE_DSN: mongodb://localhost:${{ job.services.mongo.ports[27017] }}/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: success()
        with:
          file: ./coverage.txt
          fail_ci_if_error: false
